version: '3.8'

services:
  postgres:
    image: postgres:14.2-alpine
    env_file: .env
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
      PGDATA: $PGDATA
      # POSTGRES_INITDB_ARGS: $POSTGRES_INITDB_ARGS
      # POSTGRES_INITDB_WALDIR: $POSTGRES_INITDB_WALDIR
      # POSTGRES_HOST_AUTH_METHOD: $POSTGRES_HOST_AUTH_METHOD
    # ports:
    #   - 5432:5432
    volumes:
      - postgres_db:/var/lib/postgresql/data
    restart: always
    command: "postgres -c 'max_connections=500'"
  app:
    # build: .
    build:
      context: ./
      dockerfile: Dockerfile.dev
    # command: './bin/rails server'
    command:
      ['bundle', 'exec', 'rails', 'server', '-p', '3000', '-b', '0.0.0.0']
    env_file: .env
    environment:
      RAILS_ENV: $RAILS_ENV
      # RAILS_MASTER_KEY: $RAILS_MASTER_KEY
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
      PIDFILE: /tmp/pids/server.pid # set custom path for pid to prevent app start blocking
    tmpfs:
      - /tmp/pids/ # set custom path for pid to prevent app start blocking
    ports:
      - 3000:3000
    volumes:
      - app_storage:/rails/storage
      - .:/rails # comment the volume on production
    depends_on:
      - postgres

volumes:
  postgres_db: {}
  app_storage: {}
